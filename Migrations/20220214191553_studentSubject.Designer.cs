// <auto-generated />
using System;
using JambApp.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JambApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220214191553_studentSubject")]
    partial class studentSubject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("JambApp.Entities.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOFBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("StaffCode")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("JambApp.Entities.Center", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adderess")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("centers");
                });

            modelBuilder.Entity("JambApp.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .HasColumnType("text");

                    b.Property<int?>("studentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("studentID");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("JambApp.Entities.School", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adderess")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("schools");
                });

            modelBuilder.Entity("JambApp.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CenterNAme")
                        .HasColumnType("text");

                    b.Property<string>("CourseFirstChioce")
                        .HasColumnType("text");

                    b.Property<string>("CourseSecondChoice")
                        .HasColumnType("text");

                    b.Property<string>("CourseThirdchoice")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOFBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ExamDate")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("PofileCode")
                        .HasColumnType("int");

                    b.Property<string>("SchoolFirstChioce")
                        .HasColumnType("text");

                    b.Property<string>("SchoolSecondChoice")
                        .HasColumnType("text");

                    b.Property<string>("SchoolThirdchoice")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<int>("UtmePin")
                        .HasColumnType("int");

                    b.Property<int?>("centerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("centerID");

                    b.ToTable("students");
                });

            modelBuilder.Entity("JambApp.Entities.StudentSubject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasColumnType("text");

                    b.Property<int?>("subjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentID");

                    b.HasIndex("subjectID");

                    b.ToTable("studentSubjects");
                });

            modelBuilder.Entity("JambApp.Entities.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("JambApp.Entities.Course", b =>
                {
                    b.HasOne("JambApp.Entities.Student", "student")
                        .WithMany()
                        .HasForeignKey("studentID");

                    b.Navigation("student");
                });

            modelBuilder.Entity("JambApp.Entities.Student", b =>
                {
                    b.HasOne("JambApp.Entities.Center", "center")
                        .WithMany()
                        .HasForeignKey("centerID");

                    b.Navigation("center");
                });

            modelBuilder.Entity("JambApp.Entities.StudentSubject", b =>
                {
                    b.HasOne("JambApp.Entities.Student", "student")
                        .WithMany("CourseSubject")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JambApp.Entities.Subject", "subject")
                        .WithMany()
                        .HasForeignKey("subjectID");

                    b.Navigation("student");

                    b.Navigation("subject");
                });

            modelBuilder.Entity("JambApp.Entities.Student", b =>
                {
                    b.Navigation("CourseSubject");
                });
#pragma warning restore 612, 618
        }
    }
}
